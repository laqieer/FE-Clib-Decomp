#!/usr/bin/env python3
# Path: utility/make_linker_script.py

import argparse
import os
import sys
from elftools.elf.elffile import ELFFile

def main():
    parser = argparse.ArgumentParser()
    parser.add_argument('infile', type=argparse.FileType('rb'), help='ELF file to extract symbols from')
    parser.add_argument('outfile', nargs='?', type=argparse.FileType('w'), default=sys.stdout, help='Output linker script')
    args = parser.parse_args()
    
    args.outfile.write(f'/* Generated by {os.path.basename(sys.argv[0])} */\n')
    args.outfile.write(f'/* Extracted from {os.path.basename(args.infile.name)} */\n')

    elf = ELFFile(args.infile)
    for section in elf.iter_sections():
        if section['sh_type'] == 'SHT_SYMTAB':
            for symbol in section.iter_symbols():
                if symbol['st_info']['bind'] == 'STB_GLOBAL' or symbol['st_info']['type'] in ('STT_FUNC', 'STT_OBJECT', 'STT_COMMON'):
                    args.outfile.write(f"{symbol.name.replace('.', '_')} = 0x{symbol['st_value']:x};\n")

if __name__ == '__main__':
    main()
